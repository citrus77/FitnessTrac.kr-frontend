{"version":3,"sources":["util/index.js","components/Activities.js","components/App.js","components/Home.js","components/LoginRegister.js","components/MyRoutines.js","components/Routines.js","components/SingleActivity.js","components/SingleRoutine.js","index.js"],"names":["callApi","a","url","method","token","body","options","toUpperCase","headers","JSON","stringify","fetch","process","response","json","data","error","console","Activities","activities","fetchActivities","localStorage","getItem","useState","name","setName","description","setDescription","history","useHistory","handleSubmit","e","preventDefault","push","className","onSubmit","type","placeholder","value","onChange","target","map","activity","id","App","publicRoutines","setPublicRoutines","setActivities","setToken","userName","setUserName","userRoutines","setUserRoutines","fetchPublicRoutines","fetchedRoutines","fetchUserRoutines","localToken","localUsername","fetchedActivities","props","useEffect","foundToken","to","onClick","removeItem","exact","path","Home","LoginRegister","username","setUsername","password","setPassword","verPass","setVerPass","setError","params","useParams","setItem","user","disabled","length","MyRoutines","goal","setGoal","isPublic","setIsPublic","handleDelete","routineId","routine","log","Routines","SingleActivity","children","SingleRoutine","creatorName","count","duration","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.6691b8ca.chunk.js","sourcesContent":["const { REACT_APP_API_URL } = process.env;\n\nexport const callApi = async ({url, method, token, body}) => {\n  try {\n    const options = {\n      method: method ? method.toUpperCase() : 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(body)\n    };\n    if (token) options.headers['Authorization'] = `Bearer ${token}`;\n\n    const response = await fetch(`${REACT_APP_API_URL}${url}`, options);\n    const data = await response.json();\n    if(data.error) {\n      return ({error: data.error})\n    }\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n}","import React,{ useState } from 'react';\nimport { callApi } from '../util';\nimport {  useHistory } from 'react-router';\nimport { SingleActivity } from './'\n\n\nconst Activities = ({ activities, fetchActivities }) => {\n    const token = localStorage.getItem('token');\n    const [name, setName] = useState('');\n    const [description, setDescription] = useState('');\n\n    const history = useHistory();\n    \n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        try {\n            const response = await callApi({\n                url: '/activities',\n                method: 'POST',\n                body: { name, description },\n                token\n            })\n            if (response) {\n                await fetchActivities();\n                setName('');\n                setDescription('');\n                history.push('/activities')\n            }\n            return response;            \n        } catch (error) {\n            console.error (error);\n        };\n    };\n\n    return <>\n        {\n        token\n            ? <div className='form-container'>\n                <form onSubmit={handleSubmit}>\n                    <fieldset>\n                        <label>Name: </label>\n                        <input type='text' placeholder='enter activity name' value={name} onChange={(e) => {setName(e.target.value)}}></input>\n                    </fieldset>\n                    <fieldset>\n                        <label>Description: </label>\n                        <input type='text' value={description} placeholder='enter activity description' onChange={(e) => {setDescription(e.target.value)}}></input>\n                    </fieldset>\n                    <button type='submit'>Add activity</button>\n                </form>\n            </div>\n            : null\n        }    \n        {\n        activities \n            ? <div className='activities'>\n                    <span>Activities:</span>\n                    {\n                    activities.map(activity => <SingleActivity key={activity.id} activity={activity} />)\n                    }\n                </div>\n            \n            : 'Loading...'\n        }\n    </>\n};\n\nexport default Activities;","import React, { useState, useEffect } from 'react';\nimport { Route, Link } from 'react-router-dom';\nimport { useHistory } from 'react-router';\n\nimport {\n    Activities,\n    Home,\n    LoginRegister,\n    MyRoutines,\n    Routines\n} from './'\n\nimport { callApi } from '../util';\n\nconst App = () => {\n    const [publicRoutines, setPublicRoutines] = useState([]);\n    const [activities, setActivities] = useState([]);\n    const [token, setToken] = useState('');\n    const [userName, setUserName] = useState('');\n    const [userRoutines, setUserRoutines] = useState([]);\n\n    const history = useHistory();\n    \n    const fetchPublicRoutines = async () => {\n        try {\n            const fetchedRoutines = await callApi ({ url: `/routines` });\n            if (fetchedRoutines) {\n                setPublicRoutines(fetchedRoutines);\n            };\n            return;            \n        } catch (error) {\n            console.error(error);\n        };        \n    };\n\n    const fetchUserRoutines = async () => {\n        const localToken = localStorage.getItem('token');\n        const localUsername = localStorage.getItem('username');\n        try {\n            if (localUsername) {\n                const fetchedRoutines = await callApi ({ url: `/users/${localUsername}/routines`, token: `${localToken}` });\n                if (fetchedRoutines) {\n                    setUserRoutines(fetchedRoutines);\n                };\n            };\n            return;            \n        } catch (error) {\n            console.error(error);\n        };        \n    };     \n\n    const fetchActivities = async () => {\n        try {\n            const fetchedActivities = await callApi ({ url: `/activities` });\n            if (fetchedActivities) {\n                setActivities(fetchedActivities);\n            };\n            return;\n        } catch (error) {\n            console.error (error);\n        };        \n    };\n\n    const props = {\n        activities,\n        setActivities,\n        publicRoutines,\n        setPublicRoutines,\n        token,\n        setToken,\n        userName,\n        setUserName,\n        userRoutines,\n        setUserRoutines,\n\n        fetchActivities,\n        fetchPublicRoutines,\n        fetchUserRoutines\n    };\n\n    useEffect(() => {\n        try {\n            fetchActivities();\n            fetchPublicRoutines();\n            fetchUserRoutines();\n            if (token) {\n                fetchUserRoutines();\n            };\n        } catch (error) {\n            console.error(error);\n        };\n    }, [token])\n\n    useEffect(() => {\n        const foundToken = localStorage.getItem('token');\n        if (foundToken) {\n            setToken(foundToken);\n        };\n    });\n\n    return <>\n        <header className='site-header'>\n            <div className='logo'>Fitness Trac.kr</div>\n            <div className='link-bar'>\n                <Link to='/' className='nav-link'>Home</Link>\n                <Link to='/routines' className='nav-link'>Routines</Link>\n                {\n                 token ? <Link to='/user/routines' className='nav-link'>My Routines</Link> : null  \n                }\n                <Link to='/activities' className='nav-link'>Activities</Link>\n                {\n                 token \n                    ? <button className='logout' onClick={() => {\n                        localStorage.removeItem('token');\n                        localStorage.removeItem('username');\n                        setUserName('');\n                        setToken('');\n                        setUserRoutines([]);\n                        history.push('/');\n                    }}>Log out</button>\n                    : <Link to='/account/login' className='nav-link'>Sign in</Link>\n                }\n            </div>\n        </header>\n\n        <main>\n            <Route exact path='/'>\n                <Home {...props} />\n            </Route>\n\n            <Route exact path='/routines'>\n                <Routines {...props} />\n            </Route>\n\n            <Route exact path='/activities'>\n                <Activities {...props} />\n            </Route>\n\n            <Route exact path='/user/routines'>\n                <MyRoutines {...props} />\n            </Route>\n\n            <Route exact path='/account/:method'>\n                <LoginRegister {...props} />\n            </Route>\n        </main>\n    </>;\n};\n\nexport default App;","import React from 'react';\n\nconst Home = () => {\n    return <>\n        <div>\n            Welcome to FitnessTrac.kr\n        </div>\n    </>;\n};\n\nexport default Home;","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom'\nimport { useParams, useHistory } from 'react-router';\nimport { callApi } from '../util';\n\nconst LoginRegister = ({ fetchUserRoutines, setToken, setUserName, setUserRoutines }) => {\n    const [ username, setUsername ] = useState('');\n    const [ password, setPassword ] = useState('');\n    const [ verPass, setVerPass ] = useState('');\n    const [ error, setError] = useState('');\n    const params = useParams();\n    const history = useHistory();\n\n    return <> \n        <div className='form-container'>\n            <div className='login-header'>            \n                {\n                params.method === 'register' \n                    ? <h3 className='header'>Register a new account</h3> \n                    : <h3 className='header'>Login to your account</h3>\n                }           \n            </div>\n            <form className='login-form' onSubmit={async (e) =>{\n                e.preventDefault();\n                try{ \n                    const response = await callApi ({\n                        url: `/users/${params.method}`,\n                        method: 'POST',\n                        body: { username, password }                        \n                    });\n                    if (response.error) {\n                        setError(response.error);\n                    };\n                    if (response.token) {\n                        const { token } = response;\n                        setToken(token);\n                        localStorage.setItem('token', token);\n                        const user = await callApi({ url: '/users/me', token})\n                        if (user) {\n                            setUserName(user.username);\n                            localStorage.setItem('username', user.username);\n                            await fetchUserRoutines();\n                            setUsername('');\n                            setPassword('');\n                            history.push('/user/routines');\n                        }\n                    }\n                } catch(error) {\n                    console.error(error);\n                };                \n            }}>\n                <fieldset className='input-fieldset'>\n                    <label>User name</label>\n                    <input \n                        className='input-field' \n                        type='text'\n                        name='Login Name'\n                        placeholder='enter your user name' \n                        onChange={(e) => setUsername(e.target.value)}\n                    />\n                </fieldset>\n\n                <fieldset className='input-fieldset'>\n                    <label>Password</label>\n                    <input \n                        className='input-field' \n                        type='password' \n                        name='Password'\n                        placeholder='password (min length 6 chars)' \n                        onChange={(e) => setPassword(e.target.value)}\n                    />\n                </fieldset>\n\n                {\n                params.method === 'register' \n                    ? <fieldset className='input-fieldset'>\n                        <label>Verify Password</label>\n                            <input \n                                className='input-field' \n                                type='password' \n                                name='Verify Password'\n                                placeholder='re-enter your password' \n                                onChange={(e) => setVerPass(e.target.value)}\n                            />\n                    </fieldset>\n                    : ''\n                }\n                \n                {\n                params.method === 'register' \n                    ? <button className='login-button' type=\"submit\" disabled={!password || !username || password.length < 8 || password !== verPass }>\n                        Register\n                    </button> \n                    : <button className='login-button' type=\"submit\" disabled={!password || !username || password.length < 8 }>\n                        Login\n                    </button>\n                }\n                { params.method === 'register' && password !== verPass && <span className='password-alert'>Passwords must match!</span> }\n\n                { params.method === 'register' && password.length < 8 && <span className='password-alert'>Passwords must contain at least 8 characters!</span> }\n\n                { error\n                    ? <span>{error}</span>\n                    : null }\n\n                {\n                params.method === 'register' \n                ? <>\n                    <span>Already have an account yet? </span>\n                    <Link to=\"/account/login\" className='login-link'>\n                        Click here to log in!\n                    </Link>\n                </> \n                : <>\n                    <span>Already have an account yet? </span>\n                    <Link to=\"/account/register\" className='login-link'>\n                        Click here to register!\n                    </Link>\n                </>\n                }\n            </form>            \n    </div>\n</>\n};\n\nexport default LoginRegister;","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useParams, useHistory } from 'react-router';\n\nimport { SingleRoutine } from './'\nimport { callApi } from '../util';\n\nconst MyRoutines = ({ fetchPublicRoutines, fetchUserRoutines, userRoutines }) => {\n    const [name, setName] = useState('');\n    const [goal, setGoal] = useState('');\n    const [isPublic, setIsPublic] = useState(false);\n    const [error, setError] = useState('');\n\n    const token = localStorage.getItem('token');\n    const history = useHistory();\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        try {\n            const response = await callApi({\n                url: `/routines`,\n                method: \"POST\",\n                body: {name, goal, isPublic},\n                token\n            })\n            if (response.error) {\n                setError(response.error);\n            };\n            if (response) {\n                await callApi({url: '/routines', token});\n                setName('');\n                setGoal('');\n                setIsPublic(false);\n                await fetchPublicRoutines();\n                await fetchUserRoutines();\n                history.push('/user/routines');\n            };\n            return response;\n        } catch (error) {\n            console.error(error);\n        };\n    };\n\n    const handleDelete = async (routineId) => {\n        try {\n            await callApi({\n                url: `/routines/${routineId}`, \n                method: \"DELETE\",\n                token            \n            })\n            await callApi({url: '/routines', token});\n            fetchUserRoutines();\n            fetchPublicRoutines();\n            history.push('/user/routines');\n        } catch (error) {\n            console.error(error);\n        };    \n    };\n\n    const handleEdit = (routineId) => async (e) => {\n        e.preventDefault();\n        try {\n            const response = await callApi({\n                url: `routines/${routineId}`,\n                method: 'PATCH',\n                body: { name, goal },\n                token\n            })\n            if (response.error) {\n                setError(response.error);\n            };\n            if (response) {\n                console.log(response)\n                await callApi({url: '/routines', token});\n                setName('');\n                setGoal('');\n                setIsPublic(false);\n                await fetchPublicRoutines();\n                await fetchUserRoutines();\n                history.push('/user/routines');\n            };\n            return response;\n        } catch (error) {\n            console.error (error);\n        };\n    };\n\n    const handleAddActivity = async () => {\n        try {\n            \n        } catch (error) {\n            console.error(error);\n        };\n    };\n\n    return <>\n        <div className='form-container'>\n            <form onSubmit={handleSubmit}>\n                <label>Create a new routine:</label>\n                <fieldset>\n                    <label>Name: </label>\n                    <input type='text' placeholder=' enter name' onChange={(e) => {setName(e.target.value)}} />\n                </fieldset>\n                <fieldset>\n                    <label>Goal: </label>\n                    <input type='text' placeholder=' enter goal' onChange={(e) => {setGoal(e.target.value)}} />\n                </fieldset>\n                <fieldset>\n                    <label>Public: </label>\n                    <select placeholder='no' onChange={(e) => {setIsPublic(e.target.value)}}>\n                        <option value='false'>NO</option>\n                        <option value='true'>YES</option>\n                    </select>\n                </fieldset>\n                <button type='submit'>Create Routine</button>\n                { error\n                    ? <div className='password-alert'>{error}</div>\n                    : null\n                }\n            </form>\n        </div>\n        \n        { userRoutines.length > 0\n            ? \n                <div className='routines'>\n                    <span>Routines:</span>\n                    {\n                    userRoutines.map(routine => <SingleRoutine key={routine.id} routine={routine}>\n\n                        { <button onClick={() => handleDelete(routine.id)}>Delete routine</button> }\n                        \n                        { <div>\n                            <form onSubmit={handleEdit(routine.id)}>\n                                <label>Edit routine:</label>\n                                <fieldset>\n                                    <label>Change name: </label>\n                                    <input type='text' value={name} placeholder={routine.name} onChange={(e) => setName(e.target.value)} />\n                                </fieldset>\n                                <fieldset>\n                                    <label>Change goal: </label>\n                                    <input type='text' value={goal} placeholder={routine.goal} onChange={(e) => setGoal(e.target.value)} />\n                                </fieldset>\n                            </form>\n                            <button type='submit'>Submit changes</button>\n                        </div> }\n\n                    </SingleRoutine>)\n                    }\n                </div>\n            \n            : null }\n    </>\n};\n\nexport default MyRoutines;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { SingleRoutine } from './'\n\nconst Routines = ({ publicRoutines }) => {\n    return publicRoutines\n        ? <>\n            <div className='routines'>\n                <span>Routines:</span>\n                {\n                publicRoutines.map(routine => <SingleRoutine key={routine.id} routine={routine} />)\n                }\n            </div>\n        </>\n        : 'Loading...'\n};\n\nexport default Routines;","import React from 'react';\n\nconst SingleActivity = ({ children, activity }) => {\n    return activity \n        ? <div className='activity-single'>\n            <span>Name: {activity.name}</span>\n            <span>Description: {activity.description}</span>\n\n            { children }\n            \n        </div>\n        : 'Loading...'\n};\n\nexport default SingleActivity;","import React from 'react';\n\nimport { SingleActivity } from './'\n\nconst SingleRoutine = ({ children, routine }) => {\n\n    return routine \n        ? <div className='routine-single'>\n            <span><h3>{routine.name}</h3></span>\n            <span><h3 className='creator-name'>created by {routine.creatorName}</h3></span>\n            <span>Goal: {routine.goal}</span>\n            <span>Public: {routine.isPublic ? 'yes': 'no' }</span>\n\n            { children }\n\n            {\n            routine.activities.length > 0 && <div className='activities'>\n                <span>Activities:</span>\n                <ul className='activities-list'>\n                {\n                 routine.activities.map(activity => <li className='activity-single' key={activity.id}>\n                     <SingleActivity activity={activity}>\n                     {\n                        <>\n                            <span>Repetition: {activity.count} times</span>\n                            <span>Duration: {activity.duration} minutes</span>\n                        </>\n                     }\n                    </SingleActivity>\n                </li>)\n                }\n                </ul>\n            </div>\n            }\n        </div>\n        : 'Loading...'\n};\n\nexport default SingleRoutine;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom'\n\nimport { App } from './components'\n\nReactDOM.render(\n    <Router>\n        <App />\n    </Router>,\n  document.querySelector('#app')\n);"],"sourceRoot":""}